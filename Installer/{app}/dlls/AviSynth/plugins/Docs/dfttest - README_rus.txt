
                                       dfttest v1.8 by tritical

Информация:

   2D/3D частотно-доменный шумоподавитель.

   Требует наличия libfftw3f-3.dll в Windows/system32
   http://www.fftw.org/install/windows.html


---------------------------------------------------------------------------------------------------

Синтаксис:

   dfttest(bool Y, bool U, bool V, int ftype, float sigma, float sigma2, float pmin,
           float pmax, int sbsize, int smode, int sosize, int tbsize, int tmode,
           int tosize, int swin, int twin, float sbeta, float tbeta, bool zmean,
           string sfile, string sfile2, string pminfile, string pmaxfile, float f0beta,
           string nfile, int threads, int opt, string nstring, string sstring,
           string ssx, string ssy, string sst, int dither)


---------------------------------------------------------------------------------------------------

Параметры:

   Y,U,V -

       Если true, соответствующий уровень(параметр) обработан.

       по умолчанию:  true,true,true



   ftype -

       Контроли подключения типа фильтра.  Установлены следующие настройки:

           0 -  винер подобный фильтр

                 mult = max((psd-sigma)/psd,0)^f0beta

           1 -  тяжёлый порог

                 mult = psd < sigma ? 0.0 : 1.0;

           2 -  множитель

                 mult = sigma

           3 -  множитель переключения, основанный на значении psd

                 mult = (psd >= pmin && psd <= pmax) ? sigma : sigma2

           4 -  множитель переключения на базе значения psd и диапазоне

                 mult = sigma*sqrt((psd*pmax)/((psd+pmin)*(psd+pmax)))

       Реальные и воображаемые части каждого комплексного dft коэффициента умножены
       с помощью  передачи 'mult' значения.

          ** psd = magnitude squared = real*real + imag*imag

       по умолчанию:  0


   sigma,sigma2 -

       Значение sigma и sigma2 (используйте, как описано в ftype описании параметра).
       Если  применяется  sfile или sstring параметр, тогда игнорируется параметр sigma. Если используется
       sfile2 параметр, тогда sigma2 параметр игнорируется.

     Примечание:  Начиная с v1.5, эти величины нормализованы, основываясь на
                  непоследовательном{несвязнном} увеличении мощности окна, когда ftype <2.
                  Это говорит о том, что для ftype<2, параметры sigma/sigma2, отвечающие за величину
                  остаточного шума, теперь не зависят от размеров окна анализа и типа используемых
                  взвешивающих окон, но напрямую задают величину подавления шума.
                   Для удобства нормализующий коэффициент выводится через
                  OutputDebugString() при загрузке фильтра. Чтобы перейти от старых значений 
                  sigma к новым достаточно умножить старые на коэффициент нормализации. Такая же
                  нормализация применяется и к значениям загружаемым из файлов, заданных
                  параметрами sfile/sfile2.

       По умолчанию:  16.0,16.0


   pmin,pmax -

       Используется, как описано в ftype описании параметра. Используя pminfile
       параметр  pmin параметр игнорируется. Если используется pmaxfile, параметр pmax параметр 
       игнорируется

           Примечание: Начиная с версии 1.5 эти параметры автоматически нормализуются
                 в зависимости от порога интенсивности неупорядоченного шума взвешивающего окна.
                 Теперь они не зависят от размеров окна анализа и типа используемых взевшивающих
                 окон, но напрямую задают величину шума. Для удобства нормализующий коэффициент
                 выводится через OutputDebugString() при загрузке фильтра. Чтобы перейти от старых
                 значений pmin/pmax к новым достаточно умножить старые (до 1.5) на коэффициент
                 нормализации. Такая же нормализация применяется и к значениям загружаемым 
                 из файлов, заданных параметрами из файлов pmin/pmax.

        значение по умолчанию:  0.0,500.0


   sbsize -

       Устанавливает длину сторон пространственного окна. Должен быть 1 или больше.
       Должен быть нечетным, если применяется smode = 0.

       по умолчанию:  12


   smode -

       устанавливает режим для пространственной операции. Есть два возможных параметра настройки:

          0 - обработать каждый пиксель независимо, сосредотачивают пространственное окно на текущем пикселе, 
          повторяется фильтр, перемещение к следующему пикселю. Пространственное перекрытие блоков 'sosize', не используется.

          1 - обработать пространственное измерение в блоках sbsize. Пространственное перекрытие блоков используется 'sosize'.

       по умолчанию:  1


   sosize -

       устанавливает пространственное перекрытие блоков.   Если sosize больше, чем sbsize>> 1, то sbsize % (sbsize-sosize) должен равняться 0.
       Другими словами, перекрытие, больше чем 50 % требует, чтобы sbsize-sosize был кратен значению sbsize.


       по умолчанию:  9


   tbsize -

       устанавливает временной радиус векторного анализа (то есть число связанных кадров. Должен быть иметь
       наименьшее количество 1. Должен быть нечетным, используя tmode = 0.

       по умолчанию:  5


   tmode -

       Устанавливает режим для временной операции. Есть два возможных параметра настройки:

          0 - обработать каждый кадр независимо ..., сосредотачивают временное окно
               на текущем кадре, повторяется фильтр, перемещение к следующему кадру.
               Временное перекрытие 'tosize', не используется.

          1 - обработать временное измерение в блоках tbsize. Временное перекрытие 
              блоков используется 'tosize'.   

       по умолчанию:  0


   tosize -

       устанавливает временное перекрытие блоков.  Должен быть в диапозоне от 0 для tbsize-1(включительно).
       Если tosize больше, чем tbsize>> 1, то tbsize % (tbsize-tosize) должен равняться 0.
       Другими словами, перекрытие, больше чем 50 % требует, чтобы tbsize-tosize был делитель
       кратным tbsize.

       по умолчанию:  0


   swin,twin -

       Заставляет тип окна analysis/synthesis использовать для пространственной (swin) и
       временной (twin) обработки. Возможные параметры настройки:

		 0:  hanning
		 1:  hamming
		 2:  blackman
		 3:  4 term blackman-harris
		 4:  kaiser-bessel
		 5:  7 term blackman-harris
		 6:  flat top
		 7:  rectangular
		 8:  Bartlett
		 9:  Bartlett-Hann
		10:  Nuttall
		11:  Blackman-Nuttall

       по умолчанию::  0, 7


   sbeta,tbeta -

       Устанавливает значение beta для кайзер-бесселевого типа окна. sbeta идет с swin,
       tbeta идет с twin. Не применяется, если соответствующее значение окна установлено как 4.

       по умолчанию:  2.5,2.5


   zmean -

       Контролирует, вычтено ли среднее окно (zero'd) до фильтрования в частотной области.
       
       по умолчанию:  true


   sfile -

       Определяет входной файл, вносящийся в список значений sigma для каждого коэффициента dft.
       Могут быть многократные линии с многократными коэффициентами в линию.
       Отдельные коэффициенты на том же самом использовании линии,',' или ' '.Размещение 
       '#' в начале линии заставит ту линию игнорироваться. Коэффициенты
       читаются от файла в порядке слева -направо, вверх- вниз.

       dft преобразованные результаты в tbsize*sbsize * ((sbsize>> 1) +1) коэффициенты.
       Вы должны дать эти многие значения sigma в sfile. Предположение 2-D (tbsize=1),
       и sbsize=8 (то есть 8x8 окно). Результирующее dft  преобразовывание имеет 40
       коэффициенты, организованные следующим образом:

              0  1  2  3  4
              5  6  7  8  9
             10 11 12 13 14
             15 16 17 18 19
             20 21 22 23 24
             25 26 27 28 29
             30 31 32 33 34
             35 36 37 38 39

       Номера, данные здесь определяет  значение sigma из sfile
       соответствует тому коэффициенту dft .

       Коэффициент DC находится в оставленном верхнем. Главная строка соответствует
       просто горизонтальным частотам, и частоты увеличиваются слева  вправо. В этом примере '4' соответствует самой высокой горизонтальной частоте.

       Крайний левый столбец соответствует просто частотам кадровой развертки, но
       самая высокая частота - в (sbsize>> 1) строка (принимающая начала нумерации
       в 0) ... в этом случае '20' соответствует самой высокой частоте кадровой развертки.
       Частоты тогда уменьшаются с (sbsize>> 1) к sbsize-1. В основном,
       первые (sbsize>> 1) строки соответствуют положительным частотам и
       последние (sbsize>> 1)-1 строка соответствуют отрицательным частотам.

       В 8x8 блоке, единственная самая высокая частота расположена в '24'.

       В случае если tbsize> 1, первый набор ((sbsize>> 1) +1) *sbsize
       коэффициенты соответствуют самым низким частотам временно (с
       отношения, описанные для 2-ого случая{регистра}, держащегося в пределах того набора) и
       частоты увеличиваются временно с набора, чтобы установить к tbsize>> 1 набор.
       Частоты тогда уменьшаются оттуда к набору tbsize-1 (снова
       уверенное против отрицательных частот как упомянуто предварительно). Если tbsize=3,
       Вы получаете 120 коэффициентов:

              0   1   2   3   4
              5   6   7   8   9
             10  11  12  13  14
             15  16  17  18  19
             20  21  22  23  24
             25  26  27  28  29
             30  31  32  33  34
             35  36  37  38  39

             40  41  42  43  44
             45  46  47  48  49
             50  51  52  53  54
             55  56  57  58  59
             60  61  62  63  64
             65  66  67  68  69
             70  71  72  73  74
             75  76  77  78  79

             80  81  82  83  84
             85  86  87  88  89
             90  91  92  93  94
             95  96  97  98  99
            100 101 102 103 104
            105 106 107 108 109
            110 111 112 113 114
            115 116 117 118 119

       The DC coefficient is still at '0'.  The highest purely temporal frequency is
       at '40'.  The highest overall frequency is at '64'.

       default:  ""


   sfile2,pminfile,pmaxfile -

       Может использоваться, чтобы дать различные значения sigma2, pmin, и pmax для каждого
       коэффициент dft соответственно. Вход и формат - точно такой же самый как
       описанный в sfile описании параметра. Если sfile2 не дается тогда
       значение sigma2 используется для каждого коэффициента обвиняемого. Если pminfile
       не задано, тогда значение pmin используется для каждого коэффициента dft. Если
       pmaxfile не задается тогда, значение pmax используется для каждого коэффициента dft.

       по умолчанию:  "","",""


   f0beta -

       Термин интенсивности к ftype=0. При ftype=0 формула:

              max((psd-sigma)/psd,0)^f0beta

       Для f0beta=1, это уравнение соответствует фильтру wiener с
       спектральным вычитанием, как оценка мощности сигнала. Для f0beta=0.5,
       уравнение соответствует спектральному вычитанию. 1.0 и 0.5 случаи
       отделены от общей подпрограммы в коде, чтобы увеличить скорость
       операции. Другие значения приведут к общей используемой подпрограмме,
       которая должна выполнить pow() вычисление, и поэтому намного медленнее.

       По умолчанию:  1.0


   nfile -

       Когда ftype <2, nfile может использоваться, чтобы определить местоположения блока в видео,
       из которого оценивается коэффициент интенсивности шумового спектра (sigma), который будет использоваться
       для фильтрации.

       Когда шум, который будет удален, не белый (то есть, не имеющий равномерной интенсивности по спектру), 
       определяется только единственное{отдельное} значение сигмы, как не адекватное. 
       В предшествующих версиях до v1.5, применение коэффициента в таких случаях означало, что Вы должны будете выяснить
       шумовой спектр самостоятельно, и затем используя sfile,  ввести значения сигмы.
       Теперь dfttest может выполнить задачу оценки интенсивности шумового спектра.

       nfile должен перечислить местоположения в видео, которые состоят из шума на
       плоский фон, один вход в линию. Синтаксис линии:

                 frame_number, plane, ypos, xpos например 0,0,20,20

           plane: (0=Y, 1=U, 2=V)
           ypos/xpos: верхняя левая позиция блока
                       (0,0 - верхний левый угол рамки{фрейма}), 

           dfttest устанавливает окно (тип определен sbsize/tbsize/swin/twin)
           в указанном местоположении, и оценках силы, используя fft magnitude^2.
           Когда tbsize> 1, frame_number определяет первую рамку{фрейм} временного блока.
           Удостоверьтесь, что размер окна является достаточно большим, чтобы фиксировать 
           полный шум образца.

           Если Вы перечисляете многократные блоки (мультилинии в nfile), то
           оценки, полученные в каждом блоке усреднены, чтобы сформировать конечную оценку.
           Наличие большего количества местоположений блока, который используется, понижает
           дисперсию оценки.
           Внося в список многократные местоположения блока, лучший вариант, если местоположения
           не накладываются.

           Как правило, вычитание интенсивности шумового спектра власти не адекватно becase
           это - только среднее число. В любом блоке шумовой спектр имеет потенциал
           превышатющий среднее число в шумовом частотном мусоре. Поэтому, один типично
           вычитание основано на некотором кратном числе шумового спектра (обычно в диапазоне
           из 3-8). Значение по умолчанию, используемое в dfttest - 5 если ftype=0 и 7 если ftype=1. 
           Если Вы хотите использовать другое значение, затем на некоторой линии в nfile 
           помещают следующее:

                  a=over_subtraction_factor например a=3.5

           Чтобы прокомментировать линию в nfile (имеют это игнорироваться), поместите '#' в
           начало линии.

           Пример:

              avisource ("noisy_source.avi")
              dfttest (f0beta=0.5, U=false, V=false, nfile = "nfile.txt")

                Здесь, dfftest используется с настройками по умолчанию, чтобы фильтровать только
                plane Y, ожидайте для f0beta=0.5, приводящего к спектральному вычитанию
                вместо фильтрации wiener. nfile вносит в список местоположения только
                шум, и имеет следующие линии:

                   0,0,20,40
                   5,0,100,380
                   14,0,400,100
                   a=5.2

                Первая линия соответствует рамке{фрейму} 0, y-plane, в x, y местоположение (40,20).
                Оценка от того блока будет усреднена с другими двумя
                оценками, и по фактору вычитания установлены равные 5.2.

       Используя nfile, предполагаемый шумовой спектр выводится к 
       "noise_spectrum-date_string.txt", расположенный в текущем каталоге. Это перечисляет
       интенсивность каждого dft коэффициента (размещение - то же самое как объяснено в sfile
       описание). Средняя шумовая интенсивность также вычислена.Как и в v.1.7, этот файл
       может быть использован с sfile параметром.

       значение по умолчанию: ""


   threads -

       Установите значение согласно количеству ядер процессора.  Если установите в 0, то количество
       ядер будет детектироваться автоматически.

       по умолчанию:  0

   opt -

       Установки, которые применяются для оптимизации работы CPU. Возможные установки:

          0 - авто детектирование
          1 - c routines
          2 - sse routines
          3 - sse2 routines

       по умолчанию:  0



   nstring -

       Те же самые функциональные возможности, как 'nfile', но позволяет вводить местоположения окна непосредственно в
       сценарий вместо того, чтобы создавать отдельный файл. Список frame/plane/ypos/xpos
       тетрады сохранены, как строка с каждой тетрадой, отделенной местом.
       Пример:

          Если вы применяете nfile, то это имеет вид:

              a=4.0
              35,0,45,68
              28,0,23,87

          Вы можете использовать следующий nstring и получать тот же самый результат:

             nstring="a:4.0 35,0,45,68 28,0,23,87"

       Одно ограничение - то, что фактор сверхвычитания (a:x.x) должен быть первым
       во входной строке (в противоположность nfiles, где a=x.x может быть помещен куда угодно).
       Если это не поставляется, то тот же самый фактор сверхвычитания значения по умолчанию используется, как
       используется для nfile опции.

       default:  ""


   sstring/ssx/ssy/sst -

       Используется, чтобы определить функции sigma, основанную на частоте. Если Вы хотите, чтобы sigma изменилась
       на основании частоты, используйте 'sstring' вместо параметра 'sigma'. sstring
       позволяет Вам вводить значения sigma для различных нормализованных [0.0 1.0] частот
       положения. Вычислены значения для местоположений между теми, которые Вы явно определяете
       через линейную интерполяцию. Частотный диапазон, который зависит от sbsize/tbsize,
       нормализован к [0.0 1.0] с 0.0 являющийся самой низкой частотой и 1.0 являющейся
       самой высокой частотой. Вы ДОЛЖНЫ определить значения sigma для тех конечных местоположений пункта
       (0.0 и 1.0)! Вы можете определить также много других местоположений, какие Вы желаете, и они 
       должны быть в любом специфическом заказе. Каждой паре frequency/sigma дают начения, как "f.f:s.s".
       Список пар frequency/sigma сохранен, как строка, с каждой парой, в отделенном месте.

       Например, если Вы хотите задать линейное увеличение sigma от 1.0 для самой низкой частоты
       до 10.0 для самой высокой частоты, используйте:

            sstring = "0.0:1.0 1.0:10.0"

             "0.0:1.0"  =>  это означает sigma=1.0 на частоте 0.0

             "1.0:10.0"  => это означает sigma=10.0 на частоте 1.0

             Значения sigma для частот между 0.0 и 1.0 будут вычислены через
             линейную интерполяцию.

        Или, если Вы хотите построить диапазонный фильтр с sigma на промежуточных частотах, примените такой стринг: 

            sstring = "0.0:0.0 0.15:10.0 0.85:10.0 1.0:0.0"

        Чтобы помочь визуализировать процесс, получающийся спектр фильтра выводится к
       "filter_spectrum-date_string.txt", использующий тот же самый формат, как "noise_spectrum.txt"
       Файл, который выводится опциями nfile/nstring. Формат этого файла совместим
       с вводом 'sfile'.

       Есть два метода для вычисления значений sigma для данного диапазона частоты, основанного на
       sstring. Первый вычисляет нормализованное местоположение частоты каждой размерности 
       (горизонтальной, вертикальной, временнОй), интерполирует sigma для каждой из тех размерностей, 
       и затем множители индивидуальные sigma, чтобы получить конечное значение сигмы. Так, чтобы
       все масштабировалось правильно, все значения sigma, введенные в sstring, сначала подняты к
       1 / #_dimensions мощности прежде чем выполнить определённую линейную интерполяцию и умножение.
       Второй метод (основанный на fft3dfilter системе) работает, вычисляя единственное местоположение
       от сепарирования местоположений размерности (x, y, z) как:

           new = sqrt((x*x+y*y+z*z)/3.0)

       sigma тогда интерполирована к этому местоположению. По умолчанию первая система используется.
       Чтобы использовать вторую систему просто помещает признак '$' в начале sstring, как показано
       ниже:

            sstring = "$ 0.0:1.0 1.0:10.0"


        ---------------- ssx/ssy/sst explanation -------------------------------

             sstring применяется для 1D (sbsize=1), 2-х (для tbsize=1), или трехмерный (для sbsize> 1 и tbsize> 1) 
       спектра частоты в участки памяти, нормализуя каждую размерность к [0.0 1.0]... то есть
       частотный диапазон [0.0,0.25] является кубом, покрывающим первый 1/4 каждой размерности. Это работает
       прекрасно, если Вы хотите обработать все размерности в тех же самых в терминах того, как sigma должна измениться.
       Однако, Вы можете задать sigma линейно-изменяющуюся, базируемую только на временнОй частоте или горизонтальном
       параметре, тем самым ограничивая действие. Это - то, куда ssx/ssy/sst входят!
       
       ssx/ssy/sst позволяют Вам определять сигму, как функцию горизонтальных (ssx), вертикальных (ssy),
       и временных (sst) частот только. Синтаксис - точно тот же самый, как для sstring. 
       Получим конечное значение сигмы для местоположения частоты на базе трёх отдельных значений (по одной для
       каждая размерности), вычислены и затем умножены вместе. Как с sstring значения сигмы
       сначала подняты к 1 / #_dimensions мощность прежде, чем выполнить линейную интерполяцию и
       умножение. Если Вы не определяете все три строки, то плоская функция, равная
       параметру 'сигмы' используется для недостающих размерностей. Для размерностей размера один (
       пространственный делитель, если sbsize=1 или временная размерность для tbsize=1) передача
       строки проигнорирована.

       Для примера:

            ssx="0.0:1.0 1.0:10.0",ssy="0.0:1.0 1.0:10.0",sst="0.0:1.0 1.0:10.0"

       будет давать тот же результат, что и:

            sstring="0.0:1.0 1.0:10.0"

       Или если вы хотите задать значение sigma, основанное на временнОй частоте:

            sigma=10.0,sst="0.0:1.0 1.0:10.0"

        Здесь будете использовать 10.0 для горизонтальных/вертикальных размерностей, и пилообразного линейного                    изменения  sigma от 1.0 до 10.0 во временной размерности.

       Если 'sstring' определен, он имеет приоритет по ssx/ssy/sst. Снова,
       выходной файл "filter_spectrum-date_string.txt" полезен в визуализации результата.

       значение по умолчанию: ""

       

   dither -

        Контолирует, выполнена ли передача полутонов, преобразовываний с плавающей точкой до символа без знака
       для вывода. Внутренне dfttest воздействует на значения с плавающей запятой. Для вывода
       результат должен быть квантован назад к значениям символа без знака. До v1.8 это всегда было
       сделано просто округляясь. Возможные параметры настройки:

           0 - никакая передача полутонов (то же самое как v1.7 и предшествующий)
           1 - Флойд-Steinberg, приглаживающий
           2-100 - Флойд-Steinberg, приглаживающий с увеличением количества случайной униформы
                   искажение добавило до процесса передачи полутонов

       Очевидно dither=0 является самым быстрым, и dither=1 немного быстрее чем размывание> =2
       из-за не необходимости генерировать случайное число для каждого пикселя. Однако, эта часть
       не занимает время по сравнению с фактической операцией фильтрации. dither=1 должен
       сражайтесь с любым объединением, введенным квантованием dfttest, но вероятно справкой привычки
       объединение в источнике. пригладьте> =2, может сражаться с объединением в источнике.

       default:  0


---------------------------------------------------------------------------------------------------

Changes:

   06/22/2010  v1.8

       + added dither parameter and functionality
       + attach date string to filter_spectrum.txt and noise_spectrum.txt output
       + changed sstring handling and added option to function like fft3dfilter

   06/21/2010  v1.7

       + added nstring/sstring/ssx/ssy/sst parameters and functionality
       + allow space as delimiter in input files
       - fixed missing emms in sse routine for f0beta != (1.0 or 0.5) and ftype=0

   06/04/2009  v1.6

       - fixed window normalization causing tmode=0 to always result in a rectangular
            temporal window, and smode=0 to always result in a rectangular spatial
            window.
       - changed default for twin to 7

   04/11/2009  v1.5

       + added f0beta in ftype=0
       + added nfile parameter (noise power estimation)
       + normalization of sigma/sigma2/pmin/pmax based on non-coherent power gain

   04/06/2009  v1.4

       - fix threading issue that could result in corrupted output

   01/27/2009  v1.3

       + more assembly optimizations
       + tmode=1 caching (don't need to recalculate all involved temporal blocks on every frame)
       - replicate temporal dimension at beginning/end, don't mirror

   01/24/2009  v1.2

       + added filter types 3/4 and corresponding parameters (sigma2,pmin,pmax,
            sfile2,pminfile,pmaxfile)
       + more asm optimizations
       - fixed problem with global function pointers
       - changed name of 'cfile' parameter to 'sfile'
       - the value given for sigma is no longer squared on initialization
       - sigma now defaults to 2.0
       - tbsize now defaults to 5

   11/22/2007  v1.1

       + more sse optimizations
       - fixed a bug causing the bottom part of the frame to be incorrectly
            processed with some sbsize/sosize combinations

   11/21/2007  v1.0

       - initial release


contact:  forum.doom9.org - tritical  or  kes25c@mizzou.edu
